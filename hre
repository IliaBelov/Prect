{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNpMwiUPbUMMkX9fnc5mwwC",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/IliaBelov/Prect/blob/main/hre\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vXJr5V-daL_A"
      },
      "source": [
        "from sympy import *"
      ],
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P3eRtVQDaOf7"
      },
      "source": [
        "\n",
        "v = Function(\"v\")\n",
        "h = Function(\"h\")"
      ],
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C_WrBYFhaVpa"
      },
      "source": [
        "t = symbols(\"t\")"
      ],
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "id": "WkFgTUSAadDW",
        "outputId": "29319d89-a9f3-4646-9bef-8b613dedf049"
      },
      "source": [
        "\n",
        "de = Eq(7200*diff(v(t), t),-6*v(t)-36*(v(t))**2)\n",
        "de"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle 7200 \\frac{d}{d t} v{\\left(t \\right)} = - 36 v^{2}{\\left(t \\right)} - 6 v{\\left(t \\right)}$",
            "text/plain": [
              "Eq(7200*Derivative(v(t), t), -36*v(t)**2 - 6*v(t))"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 55
        },
        "id": "Glhyzp5EaxgT",
        "outputId": "aeca3401-76af-48df-86a4-a25c7f3cc320"
      },
      "source": [
        "#sol1 = dsolve(de,v(t), ics = {v(0):20})\n",
        "sol1 = 20/(121*exp(t/1200)-120)\n",
        "sol1"
      ],
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle \\frac{20}{121 e^{\\frac{t}{1200}} - 120}$",
            "text/plain": [
              "20/(121*exp(t/1200) - 120)"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 55
        },
        "id": "8BQQOg4WfTXC",
        "outputId": "c39892ba-684b-4dae-aa45-4bfc95522210"
      },
      "source": [
        "de2 = Eq(diff(h(t), t), sol1)\n",
        "de2"
      ],
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle \\frac{d}{d t} h{\\left(t \\right)} = \\frac{20}{121 e^{\\frac{t}{1200}} - 120}$",
            "text/plain": [
              "Eq(Derivative(h(t), t), 20/(121*exp(t/1200) - 120))"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "oyERCf8EfiXu",
        "outputId": "ce2bce51-d0d5-4c80-fc96-e19cdcee0cdc"
      },
      "source": [
        "tt = plot(sol1, (t,0,1000), line_color='red')"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 58
        },
        "id": "wuTx7PJBa79E",
        "outputId": "164b498b-e4f8-4127-90d0-63752d2e47d4"
      },
      "source": [
        "sol2 = dsolve(de2, h(t), ics={h(0): 0})\n",
        "sol2"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle h{\\left(t \\right)} = - \\frac{t}{6} + 200 \\log{\\left(e^{\\frac{t}{1200}} - \\frac{120}{121} \\right)} + 400 \\log{\\left(11 \\right)}$",
            "text/plain": [
              "Eq(h(t), -t/6 + 200*log(exp(t/1200) - 120/121) + 400*log(11))"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "id": "wYXVIr3Xge7-",
        "outputId": "1addb8bc-a0a1-4c82-e00e-6995dd2d6463"
      },
      "source": [
        "vt = sol1.subs(t,90)\n",
        "vt.evalf()"
      ],
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle 1.91865253670131$",
            "text/plain": [
              "1.91865253670131"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 58
        },
        "id": "DI8tQY34bSjl",
        "outputId": "90b0f2e8-56f9-45ee-d870-5ca644281ebd"
      },
      "source": [
        "Ht = dsolve(de2, h(t), ics ={h(0):0})\n",
        "Ht"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle h{\\left(t \\right)} = - \\frac{t}{6} + 200 \\log{\\left(e^{\\frac{t}{1200}} - \\frac{120}{121} \\right)} + 400 \\log{\\left(11 \\right)}$",
            "text/plain": [
              "Eq(h(t), -t/6 + 200*log(exp(t/1200) - 120/121) + 400*log(11))"
            ]
          },
          "metadata": {},
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jhL0dNMdbZZ0",
        "outputId": "40dff089-2cea-48d6-eeff-b5474de7c85a"
      },
      "source": [
        "eq1 = solve (Eq(Ht,5),t)\n",
        "eq1"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 38
        },
        "id": "t-sz2bZRb9AX",
        "outputId": "d7c84472-8049-406c-ae8e-7711f87260e1"
      },
      "source": [
        ""
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/latex": "$\\displaystyle v{\\left(3.21 \\right)} = 30.9584584619062$",
            "text/plain": [
              "Eq(v(3.21), 30.9584584619062)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "WpcAEHO0cSPH",
        "outputId": "48c665da-7392-497a-be6f-2efbe74b5c36"
      },
      "source": [
        ""
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}